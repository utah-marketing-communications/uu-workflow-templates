name: Reusable Theme WP Engine Deployment

on:
  workflow_call:
    inputs:
      theme_name:
        description: 'Theme name (e.g., umctheme3-asia-campus)'
        required: true
        type: string
      environment_type:
        description: 'Environment type (staging or production)'
        required: true
        type: string
      wp_engine_site:
        description: 'Specific WP Engine site name to deploy to'
        required: false
        type: string
      tag_name:
        description: 'Tag name to deploy'
        required: false
        type: string
      dry_run:
        description: 'Run deployment in dry run mode'
        required: false
        type: boolean
        default: false
      delete:
        description: 'Include --delete flag in deployment'
        required: false
        type: boolean
        default: true
      cache_clear:
        description: 'Clear WP Engine cache after deploy'
        required: false
        type: boolean
        default: false
    secrets:
      WPE_ORG_SSHG_KEY_PRIVATE:
        description: 'WP Engine SSH private key'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Only run if a site name was provided
    if: inputs.wp_engine_site != '' && inputs.wp_engine_site != null
    steps:
      - name: Test SSH access before deployment
        run: |
          echo "${{ secrets.WPE_ORG_SSHG_KEY_PRIVATE }}" > $HOME/wpe_key
          chmod 600 $HOME/wpe_key
          if ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 -i $HOME/wpe_key wpe_gha+${{ inputs.wp_engine_site }}@${{ inputs.wp_engine_site }}.ssh.wpengine.net "echo 'SSH access confirmed'" 2>/dev/null; then
            echo "✅ SSH access confirmed for ${{ inputs.wp_engine_site }}"
          else
            echo "❌ SSH access failed for ${{ inputs.wp_engine_site }} - skipping deployment"
            exit 0
          fi

      - name: Delay to avoid rate limiting
        run: |
          echo "Waiting 2 seconds to avoid WP Engine rate limits..."
          sleep 2

      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ inputs.tag_name || 'main' }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install dependencies
        run: |
          if [ -f package.json ]; then
            if [ -f package-lock.json ]; then
              npm ci
            else
              npm install
            fi
          else
            echo "No package.json found, skipping dependency installation"
          fi
          
      - name: Build theme
        run: |
          if [ -f package.json ] && npm run | grep -q "build"; then
            echo "Building theme..."
            npm run build
          else
            echo "No build process configured"
          fi

      - name: Ensure theme directory exists
        run: |
          echo "${{ secrets.WPE_ORG_SSHG_KEY_PRIVATE }}" > $HOME/wpe_key
          chmod 600 $HOME/wpe_key
          ssh -o StrictHostKeyChecking=no -i $HOME/wpe_key wpe_gha+${{ inputs.wp_engine_site }}@${{ inputs.wp_engine_site }}.ssh.wpengine.net \
            "mkdir -p sites/${{ inputs.wp_engine_site }}/wp-content/themes/${{ inputs.theme_name }}"

      - name: Deploy theme to WP Engine
        run: |
          echo "🚀 Deploying ${{ inputs.theme_name }} to WP Engine ${{ inputs.environment_type }} (${{ inputs.wp_engine_site }})..."
          
          # Set up delete flag
          DELETE_FLAG=""
          if [ "${{ inputs.delete }}" == "true" ]; then
            DELETE_FLAG="--delete"
            echo "⚠️  Delete flag enabled - will remove files not in source"
          fi
          
          # Set up dry run flag
          DRY_RUN_FLAG=""
          if [ "${{ inputs.dry_run }}" == "true" ]; then
            DRY_RUN_FLAG="--dry-run"
            echo "🔍 DRY RUN MODE - no actual deployment"
          fi
          
          # Deploy theme files using rsync
          rsync -azvr $DELETE_FLAG $DRY_RUN_FLAG \
            --exclude=".*" \
            --exclude=".git/" \
            --exclude=".github/" \
            --exclude="node_modules/" \
            --exclude="package.json" \
            --exclude="package-lock.json" \
            --exclude="README.md" \
            --exclude="CHANGELOG.md" \
            --exclude=".releaserc.json" \
            --exclude=".gitignore" \
            --exclude="*.log" \
            --exclude=".DS_Store" \
            --exclude="*.md" \
            -e "ssh -o StrictHostKeyChecking=no -i $HOME/wpe_key" \
            ./ \
            wpe_gha+${{ inputs.wp_engine_site }}@${{ inputs.wp_engine_site }}.ssh.wpengine.net:sites/${{ inputs.wp_engine_site }}/wp-content/themes/${{ inputs.theme_name }}/

      - name: Clean up unwanted files (if delete is enabled)
        if: inputs.delete
        run: |
          echo "${{ secrets.WPE_ORG_SSHG_KEY_PRIVATE }}" > $HOME/wpe_key
          chmod 600 $HOME/wpe_key
          
          echo "Cleaning up unwanted files from WP Engine..."
          
          # Remove specific files and directories that should not be on the server
          ssh -o StrictHostKeyChecking=no -i $HOME/wpe_key wpe_gha+${{ inputs.wp_engine_site }}@${{ inputs.wp_engine_site }}.ssh.wpengine.net \
            "rm -rf sites/${{ inputs.wp_engine_site }}/wp-content/themes/${{ inputs.theme_name }}/.git && \
             rm -rf sites/${{ inputs.wp_engine_site }}/wp-content/themes/${{ inputs.theme_name }}/.github && \
             rm -rf sites/${{ inputs.wp_engine_site }}/wp-content/themes/${{ inputs.theme_name }}/node_modules && \
             rm -f sites/${{ inputs.wp_engine_site }}/wp-content/themes/${{ inputs.theme_name }}/package.json && \
             rm -f sites/${{ inputs.wp_engine_site }}/wp-content/themes/${{ inputs.theme_name }}/package-lock.json && \
             rm -f sites/${{ inputs.wp_engine_site }}/wp-content/themes/${{ inputs.theme_name }}/README.md && \
             rm -f sites/${{ inputs.wp_engine_site }}/wp-content/themes/${{ inputs.theme_name }}/CHANGELOG.md && \
             rm -f sites/${{ inputs.wp_engine_site }}/wp-content/themes/${{ inputs.theme_name }}/.releaserc.json && \
             rm -f sites/${{ inputs.wp_engine_site }}/wp-content/themes/${{ inputs.theme_name }}/.gitignore && \
             find sites/${{ inputs.wp_engine_site }}/wp-content/themes/${{ inputs.theme_name }} -name '*.log' -delete && \
             find sites/${{ inputs.wp_engine_site }}/wp-content/themes/${{ inputs.theme_name }} -name '.DS_Store' -delete && \
             find sites/${{ inputs.wp_engine_site }}/wp-content/themes/${{ inputs.theme_name }} -name '*.md' -delete" 2>/dev/null || true
          
          echo "Cleanup completed."

      - name: Adjust permissions on deployed theme files
        run: |
          ssh -o StrictHostKeyChecking=no -i $HOME/wpe_key wpe_gha+${{ inputs.wp_engine_site }}@${{ inputs.wp_engine_site }}.ssh.wpengine.net \
            "find sites/${{ inputs.wp_engine_site }}/wp-content/themes/${{ inputs.theme_name }} -type d -exec chmod 755 {} +; \
             find sites/${{ inputs.wp_engine_site }}/wp-content/themes/${{ inputs.theme_name }} -type f -exec chmod 644 {} +"

      - name: Clear WP Engine cache
        if: inputs.cache_clear
        run: |
          echo "🧹 Clearing WP Engine cache for ${{ inputs.wp_engine_site }}..."
          ssh -o StrictHostKeyChecking=no -i $HOME/wpe_key wpe_gha+${{ inputs.wp_engine_site }}@${{ inputs.wp_engine_site }}.ssh.wpengine.net \
            "wp cache flush --path=sites/${{ inputs.wp_engine_site }}/" 2>/dev/null || true
          echo "✅ Cache cleared for ${{ inputs.wp_engine_site }}"

      - name: Log Deployment Summary
        run: |
          echo "✅ Deployed theme ${{ inputs.theme_name }} to WP Engine ${{ inputs.environment_type }} (${{ inputs.wp_engine_site }})." >> $GITHUB_STEP_SUMMARY
