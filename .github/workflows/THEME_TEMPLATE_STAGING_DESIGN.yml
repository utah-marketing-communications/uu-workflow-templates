name: Deploy Theme to Staging Environments

on:
  workflow_call:
    inputs:
      theme_name:
        description: 'Theme name (e.g., umctheme3-asia-campus)'
        required: true
        type: string
      tag_name:
        description: 'Tag to deploy (e.g., v1.0.0, latest)'
        required: true
        type: string
      # Environment selection - enable only what you want to test
      deploy_aux:
        description: 'Deploy to AUX environments'
        type: boolean
        default: false
      deploy_bryce:
        description: 'Deploy to BRYCE environments'
        type: boolean
        default: false
      deploy_cap_reef:
        description: 'Deploy to CAP REEF environments'
        type: boolean
        default: false
      deploy_zion:
        description: 'Deploy to ZION environments'
        type: boolean
        default: false
      deploy_wp_engine:
        description: 'Deploy to WP Engine staging'
        type: boolean
        default: false
      # Safety settings
      aws_delete:
        description: 'Include --delete flag in AWS deployments'
        type: boolean
        default: false
      wp_delete:
        description: 'Include --delete flag in WP Engine deployment'
        type: boolean
        default: true
      wp_cache_clear:
        description: 'Clear WP Engine cache after deploy'
        type: boolean
        default: false
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      WPE_ORG_SSHG_KEY_PRIVATE:
        required: true

jobs:
  deploy-theme:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ inputs.tag_name }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        if [ -f package.json ]; then
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi
        else
          echo "No package.json found, skipping dependency installation"
        fi
        
    - name: Build theme
      run: |
        if [ -f package.json ] && npm run | grep -q "build"; then
          echo "Building theme..."
          npm run build
        else
          echo "No build process configured"
        fi

    # AWS Credential Configuration
    - name: Configure AWS Credentials
      if: ${{ inputs.deploy_aux || inputs.deploy_bryce || inputs.deploy_cap_reef || inputs.deploy_zion }}
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    # AWS AUX Deployments
    - name: Deploy to AUX Production
      if: ${{ inputs.deploy_aux }}
      run: |
        echo "🚀 Deploying ${{ inputs.theme_name }} to AWS AUX Production..."
        DELETE_FLAG=""
        if [ "${{ inputs.aws_delete }}" == "true" ]; then
          DELETE_FLAG="--delete"
        fi
        aws s3 sync . s3://aux-production-bucket/wp-content/themes/${{ inputs.theme_name }}/ $DELETE_FLAG
        echo "✅ Deployment to AUX Production completed!"
        
    - name: Deploy to AUX Staging
      if: ${{ inputs.deploy_aux }}
      run: |
        echo "🚀 Deploying ${{ inputs.theme_name }} to AWS AUX Staging..."
        DELETE_FLAG=""
        if [ "${{ inputs.aws_delete }}" == "true" ]; then
          DELETE_FLAG="--delete"
        fi
        aws s3 sync . s3://aux-staging-bucket/wp-content/themes/${{ inputs.theme_name }}/ $DELETE_FLAG
        echo "✅ Deployment to AUX Staging completed!"

    # AWS Bryce Deployments
    - name: Deploy to Bryce Production
      if: ${{ inputs.deploy_bryce }}
      run: |
        echo "🚀 Deploying ${{ inputs.theme_name }} to AWS Bryce Production..."
        DELETE_FLAG=""
        if [ "${{ inputs.aws_delete }}" == "true" ]; then
          DELETE_FLAG="--delete"
        fi
        aws s3 sync . s3://bryce-production-bucket/wp-content/themes/${{ inputs.theme_name }}/ $DELETE_FLAG
        echo "✅ Deployment to Bryce Production completed!"
        
    - name: Deploy to Bryce Staging
      if: ${{ inputs.deploy_bryce }}
      run: |
        echo "🚀 Deploying ${{ inputs.theme_name }} to AWS Bryce Staging..."
        DELETE_FLAG=""
        if [ "${{ inputs.aws_delete }}" == "true" ]; then
          DELETE_FLAG="--delete"
        fi
        aws s3 sync . s3://bryce-staging-bucket/wp-content/themes/${{ inputs.theme_name }}/ $DELETE_FLAG
        echo "✅ Deployment to Bryce Staging completed!"

    # AWS Capitol Reef Deployments
    - name: Deploy to Capitol Reef Production
      if: ${{ inputs.deploy_cap_reef }}
      run: |
        echo "🚀 Deploying ${{ inputs.theme_name }} to AWS Capitol Reef Production..."
        DELETE_FLAG=""
        if [ "${{ inputs.aws_delete }}" == "true" ]; then
          DELETE_FLAG="--delete"
        fi
        aws s3 sync . s3://capitol-reef-production-bucket/wp-content/themes/${{ inputs.theme_name }}/ $DELETE_FLAG
        echo "✅ Deployment to Capitol Reef Production completed!"
        
    - name: Deploy to Capitol Reef Staging
      if: ${{ inputs.deploy_cap_reef }}
      run: |
        echo "🚀 Deploying ${{ inputs.theme_name }} to AWS Capitol Reef Staging..."
        DELETE_FLAG=""
        if [ "${{ inputs.aws_delete }}" == "true" ]; then
          DELETE_FLAG="--delete"
        fi
        aws s3 sync . s3://capitol-reef-staging-bucket/wp-content/themes/${{ inputs.theme_name }}/ $DELETE_FLAG
        echo "✅ Deployment to Capitol Reef Staging completed!"

    # AWS Zion Deployments
    - name: Deploy to Zion Production
      if: ${{ inputs.deploy_zion }}
      run: |
        echo "🚀 Deploying ${{ inputs.theme_name }} to AWS Zion Production..."
        DELETE_FLAG=""
        if [ "${{ inputs.aws_delete }}" == "true" ]; then
          DELETE_FLAG="--delete"
        fi
        aws s3 sync . s3://zion-production-bucket/wp-content/themes/${{ inputs.theme_name }}/ $DELETE_FLAG
        echo "✅ Deployment to Zion Production completed!"
        
    - name: Deploy to Zion Staging
      if: ${{ inputs.deploy_zion }}
      run: |
        echo "🚀 Deploying ${{ inputs.theme_name }} to AWS Zion Staging..."
        DELETE_FLAG=""
        if [ "${{ inputs.aws_delete }}" == "true" ]; then
          DELETE_FLAG="--delete"
        fi
        aws s3 sync . s3://zion-staging-bucket/wp-content/themes/${{ inputs.theme_name }}/ $DELETE_FLAG
        echo "✅ Deployment to Zion Staging completed!"

    # WP Engine Deployment
    - name: Deploy to WP Engine
      if: ${{ inputs.deploy_wp_engine }}
      run: |
        echo "🚀 Deploying ${{ inputs.theme_name }} to WP Engine staging..."
        
        # Create SSH directory and set up key
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        
        # Add SSH private key
        echo "${{ secrets.WPE_ORG_SSHG_KEY_PRIVATE }}" > ~/.ssh/wpengine_key
        chmod 600 ~/.ssh/wpengine_key
        
        # Get WP Engine site name from repository name or input
        # This would need to be passed as an input parameter
        WP_ENGINE_SITE="${{ inputs.wp_engine_site || github.repository_name }}"
        
        # Test SSH access first
        echo "Testing SSH access to WP Engine..."
        if ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 -i ~/.ssh/wpengine_key wpe_gha+$WP_ENGINE_SITE@$WP_ENGINE_SITE.ssh.wpengine.net "echo 'SSH access confirmed'" 2>/dev/null; then
          echo "✅ SSH access confirmed for $WP_ENGINE_SITE"
        else
          echo "❌ SSH access failed for $WP_ENGINE_SITE - skipping deployment"
          exit 1
        fi
        
        # Ensure theme directory exists
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/wpengine_key wpe_gha+$WP_ENGINE_SITE@$WP_ENGINE_SITE.ssh.wpengine.net \
          "mkdir -p sites/$WP_ENGINE_SITE/wp-content/themes/${{ inputs.theme_name }}"
        
        # Deploy theme files to WP Engine
        echo "Syncing theme files to WP Engine..."
        DELETE_FLAG=""
        if [ "${{ inputs.wp_delete }}" == "true" ]; then
          DELETE_FLAG="--delete"
        fi
        
        rsync -azvr $DELETE_FLAG \
          --exclude=".*" \
          --exclude=".git/" \
          --exclude=".github/" \
          --exclude="node_modules/" \
          --exclude="package.json" \
          --exclude="package-lock.json" \
          --exclude="README.md" \
          --exclude="CHANGELOG.md" \
          --exclude=".releaserc.json" \
          --exclude=".gitignore" \
          --exclude="*.log" \
          --exclude=".DS_Store" \
          --exclude="*.md" \
          -e "ssh -o StrictHostKeyChecking=no -i ~/.ssh/wpengine_key" \
          ./ \
          wpe_gha+$WP_ENGINE_SITE@$WP_ENGINE_SITE.ssh.wpengine.net:sites/$WP_ENGINE_SITE/wp-content/themes/${{ inputs.theme_name }}/
        
        # Set proper permissions for theme files
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/wpengine_key wpe_gha+$WP_ENGINE_SITE@$WP_ENGINE_SITE.ssh.wpengine.net \
          "find sites/$WP_ENGINE_SITE/wp-content/themes/${{ inputs.theme_name }} -type f -exec chmod 644 {} +"
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/wpengine_key wpe_gha+$WP_ENGINE_SITE@$WP_ENGINE_SITE.ssh.wpengine.net \
          "find sites/$WP_ENGINE_SITE/wp-content/themes/${{ inputs.theme_name }} -type d -exec chmod 755 {} +"
        
        echo "✅ Deployment to WP Engine site '$WP_ENGINE_SITE' completed!"

    # Clear WP Engine Cache
    - name: Clear WP Engine cache
      if: ${{ inputs.deploy_wp_engine && inputs.wp_cache_clear }}
      run: |
        echo "🧹 Clearing WP Engine cache..."
        mkdir -p ~/.ssh
        echo "${{ secrets.WPE_ORG_SSHG_KEY_PRIVATE }}" > ~/.ssh/wpengine_key
        chmod 600 ~/.ssh/wpengine_key
        
        WP_ENGINE_SITE="${{ inputs.wp_engine_site || github.repository_name }}"
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/wpengine_key wpe_gha+$WP_ENGINE_SITE@$WP_ENGINE_SITE.ssh.wpengine.net \
          "wp cache flush --path=sites/$WP_ENGINE_SITE/" 2>/dev/null || true
        
        echo "✅ Cache cleared for $WP_ENGINE_SITE"

    # Deployment Summary
    - name: Deployment Summary
      run: |
        echo "🎉 Deployment Summary"
        echo "==================="
        echo "Theme: ${{ inputs.theme_name }}"
        echo "Tag: ${{ inputs.tag_name }}"
        echo "AUX: ${{ inputs.deploy_aux }}"
        echo "Bryce: ${{ inputs.deploy_bryce }}"
        echo "Capitol Reef: ${{ inputs.deploy_cap_reef }}"
        echo "Zion: ${{ inputs.deploy_zion }}"
        echo "WP Engine: ${{ inputs.deploy_wp_engine }}"
        echo "AWS Delete: ${{ inputs.aws_delete }}"
        echo "WP Delete: ${{ inputs.wp_delete }}"
        echo "Cache Clear: ${{ inputs.wp_cache_clear }}"
        echo "✅ Theme deployment completed successfully!"
